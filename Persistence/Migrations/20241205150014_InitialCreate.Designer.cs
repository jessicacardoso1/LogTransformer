// <auto-generated />
using System;
using LogTransformer.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LogTransformer.Persistence.Migrations
{
    [DbContext(typeof(LogDbContext))]
    [Migration("20241205150014_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LogTransformer.Core.Entities.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("OriginalContent")
                        .IsRequired();

                    b.Property<string>("SourceFileName");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("LogTransformer.Core.Entities.TransformedLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("FilePath");

                    b.Property<int>("OriginalLogId");

                    b.Property<string>("TransformedContent")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("OriginalLogId");

                    b.ToTable("TransformedLogs");
                });

            modelBuilder.Entity("LogTransformer.Core.Entities.TransformedLog", b =>
                {
                    b.HasOne("LogTransformer.Core.Entities.LogEntry", "OriginalLog")
                        .WithMany()
                        .HasForeignKey("OriginalLogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
